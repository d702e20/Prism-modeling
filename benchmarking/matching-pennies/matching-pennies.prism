// Matching pennies

csg

player even
    even_penny_player
endplayer

player odd
    odd_penny_player
endplayer

const int winning_sum = 100;

global even_sum : [0..100] init 50;
global odd_sum: [0..100] init 50;
global odd_player_won : bool init false;
global even_player_won : bool init false;

formula gameover = odd_sum >= winning_sum | even_sum >= winning_sum;

label "game_over" = gameover;
label "odd_player_winning" =  odd_sum >= winning_sum & even_sum < winning_sum;
label "even_player_winning" = odd_sum < winning_sum & even_sum >= winning_sum;
label "odd_player_won_round" = odd_player_won;
label "even_player_won_round" = even_player_won; 

module even_penny_player
    [even_heads] !gameover -> true;
    [even_tails] !gameover -> true;
endmodule

module odd_penny_player = even_penny_player[even_heads=odd_heads, even_tails=odd_tails] endmodule

module updater
	[even_heads, odd_heads] true -> (even_sum' = even_sum+1) & (odd_sum' = odd_sum-1)&(even_player_won' = true)&(odd_player_won' = false);
	[even_heads, odd_tails] true -> (even_sum' = even_sum-1) & (odd_sum' = odd_sum+1)&(even_player_won' = false)&(odd_player_won' = true);
	[even_tails, odd_heads] true -> (even_sum' = even_sum-1) & (odd_sum' = odd_sum+1)&(even_player_won' = false)&(odd_player_won' = true);
	[even_tails, odd_tails] true -> (even_sum' = even_sum+1) & (odd_sum' = odd_sum-1)&(even_player_won' = true)&(odd_player_won' = false);
endmodule